README
------

Befunge is an esoteric programming language in which a program is a
2-dimensional grid of cells with instructions on them. The instruction
pointer may traverse the cells in the four cardinal directions,
executing the instructions contained within the cells as they are read.
The central memory structure of the language is a stack which most
operations either push to or pop from. The language is also self
modifying, in that there exist instructions to read and write the
program's source while it is running (this allows for using cells as
an alternative to the stack for storage).

This interpreter does not necessary strictly follow the specification
and has my own take on the language, for instance the inclusion of an
equality comparator rather than just the standard greater than
comparator. Also, the cells are represented as integers, meaning they
are not limited to 256 values and thus we are not restricted in scale
(e.g. if we want to multiply two large numbers, we may); in fact
arbitrary precision is used so we are only bounded by available memory.
